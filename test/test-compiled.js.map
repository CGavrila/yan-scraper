{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AACpC,IAAI,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAE1C,QAAQ,CAAC,SAAS,EAAE,YAAW;;AAE3B,cAAU,CAAC,YAAW;AAClB,eAAO,CAAC,eAAe,EAAE,CAAC;KAC7B,CAAC,CAAC;;AAEH,MAAE,CAAC,0DAA0D,EAAE,YAAW;AACtE,cAAM,CAAC,YAAW;AAAC,gBAAI,OAAO,EAAE,CAAA;SAAC,CAAC,CAAC,EAAE,SAAM,CAAC,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;;AAEH,MAAE,CAAC,gEAAgE,EAAE,YAAW;AAC5E,YAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC/B,eAAO,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;AACxC,cAAM,CAAC,YAAW;AAAC,mBAAO,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAA;SAAC,CAAC,CAAC,EAAE,SAAM,CAAC,KAAK,CAAC,CAAC;KAChF,CAAC,CAAC;;AAEH,MAAE,CAAC,kEAAkE,EAAE,YAAW;AAC9E,YAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC/B,cAAM,CAAC,YAAW;AAAC,mBAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;SAAC,CAAC,CAAC,EAAE,SAAM,CAAC,KAAK,CAAC,CAAC;KAChE,CAAC,CAAC;;AAEH,MAAE,CAAC,uEAAuE,EAAE,YAAW;AACnF,YAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC/B,cAAM,CAAC,YAAW;AAAC,mBAAO,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC,CAAA;SAAC,CAAC,CAAC,EAAE,CAAC,GAAG,SAAM,CAAC,KAAK,CAAC,CAAC;KACpF,CAAC,CAAC;;AAEH,MAAE,CAAC,qCAAqC,EAAE,YAAW;AACjD,YAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC/B,cAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/D,eAAO,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1C,cAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAClE,CAAC,CAAC;CACN,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["'use strict';\n\nvar expect = require('chai').expect;\nvar Crawler = require('../dist/index.js');\n\ndescribe('Scraper', function() {\n\n    beforeEach(function() {\n        Crawler.destroyInstance();\n    });\n\n    it('should throw error if you try to instantiate it directly', function() {\n        expect(function() {new Crawler()}).to.throw(Error);\n    });\n\n    it('should throw error if trying to register template without name', function() {\n        var crawler = Crawler.instance;\n        crawler.addTemplate({name: 'whatever'});\n        expect(function() {crawler.addTemplate({name: 'whatever'})}).to.throw(Error);\n    });\n\n    it('should throw error if trying to register template with same name', function() {\n        var crawler = Crawler.instance;\n        expect(function() {crawler.addTemplate({})}).to.throw(Error);\n    });\n\n    it('shouldn\\'t throw an error if trying to register template without name', function() {\n        var crawler = Crawler.instance;\n        expect(function() {crawler.addTemplate({name: 'whatever'})}).to.not.throw(Error);\n    });\n\n    it('should create a registered template', function() {\n        var crawler = Crawler.instance;\n        expect(Object.keys(crawler.getTemplates()).length).to.equal(0);\n        crawler.addTemplate({ name: 'whatever' });\n        expect(Object.keys(crawler.getTemplates()).length).to.equal(1);\n    });\n});\n"]}