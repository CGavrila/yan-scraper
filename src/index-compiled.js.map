{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;gCAEK,mBAAmB;;;;uBACZ,SAAS;;IAAtB,OAAO;;sBACA,QAAQ;;IAAf,CAAC;;AAEb,IAAI,UAAU,GAAG,MAAM,EAAE,CAAC;;IAEpB,OAAO;AAEE,aAFT,OAAO,CAEG,cAAc,EAAE;8BAF1B,OAAO;;AAGL,YAAI,UAAU,KAAK,cAAc,EAC7B,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;;AAElF,YAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,YAAI,CAAC,KAAK,GAAG,mCAAW,CAAC;KAC5B;;iBARC,OAAO;;eAqBE,qBAAC,QAAQ,EAAE;AAClB,gBAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AACjE,gBAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;;AAEjF,gBAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACtC;;;eAEW,wBAAG;AACX,mBAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;;eAEI,iBAAG;AACJ,mBAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC9C;;;eAEkB,+BAAG;;AAElB,gBAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,oBAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;;AAEzB,uBAAO,CAAC,IAAI,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC3C,wBAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;AACtC,+BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBACrB;iBACJ,CAAC,CAAC;aACN;;AAED,mBAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC9C;;;eAhCqB,2BAAG;AACrB,gBAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;SAC3B;;;aATkB,eAAG;AAClB,gBAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAChB,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC;;AAE/C,mBAAO,IAAI,CAAC,UAAU,CAAC,CAAA;SAC1B;;;WAfC,OAAO;;;qBAoDE,OAAO","file":"index-compiled.js","sourcesContent":["'use strict';\n\nimport Deque from 'collections/deque';\nimport * as request from 'request';\nimport * as _ from 'lodash';\n\nlet _singleton = Symbol();\n\nclass Scraper {\n\n    constructor(singletonToken) {\n        if (_singleton !== singletonToken)\n            throw new Error('Scraper is a singleton class, cannot instantiate directly.');\n\n        this.templates = {};\n        this.queue = new Deque();\n    }\n\n    static get instance() {\n        if(!this[_singleton])\n            this[_singleton] = new Scraper(_singleton);\n\n        return this[_singleton]\n    }\n\n    static destroyInstance() {\n        this[_singleton] = null;\n    }\n\n    addTemplate(template) {\n        if (!template.name) throw new Error('Template name is missing.');\n        if (template.name in this.templates) throw new Error('Template already exists.');\n\n        this.templates[template.name] = {};\n    }\n\n    getTemplates() {\n        return this.templates;\n    }\n\n    start() {\n        process.nextTick(this._processNextInQueue);\n    }\n\n    _processNextInQueue() {\n\n        if (this.queue.length > 0) {\n            var next = queue.shift();\n\n            request(next, function (error, response, body) {\n                if (!error && response.statusCode == 200) {\n                    console.log(body);\n                }\n            });\n        }\n\n        process.nextTick(this._processNextInQueue);\n    }\n}\n\nexport default Scraper;"]}